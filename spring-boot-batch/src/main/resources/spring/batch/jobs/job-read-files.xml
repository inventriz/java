<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		">

    <import resource="../config/context.xml"/>
    
    <bean id="domain" class="readwrite.Domain" />
    
	<job id="readArtificeJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step1">
			<tasklet allow-start-if-complete="false">
				<chunk reader="artificeReader" writer="artificeWriter" processor="itemProcessor" commit-interval="1" />
			</tasklet>
		</step>
	</job>
	
	<job id="readMultiJob" xmlns="http://www.springframework.org/schema/batch">
		<step id="step2">
			<tasklet allow-start-if-complete="false">
				<chunk reader="flatFileItemReader" 
                          writer="flatFileItemWriter" commit-interval="1" />
			</tasklet>
		</step>
	</job>
	
	<job id="readMethod" xmlns="http://www.springframework.org/schema/batch">
		<step id="step3" next="step4">
			<tasklet ref="artificeTasklet" method="copyImageFromFTP">				
			</tasklet>
		</step>
		<step id="step4">
			<tasklet ref="artificeTasklet" method="getTcinFormage">				
			</tasklet>
		</step>
	</job>
	
	<bean id="artificeReader" class="hello.ArtificeReader" />
	<bean id="artificeWriter" class="hello.ArtificeWriter" />
	<bean id="itemProcessor" class="hello.PersonItemProcessor" />
	<bean id="artificeTasklet" class="readwrite.ArtificeTasklet" />
	
	

	<bean id="multiResourceReader"
		class=" org.springframework.batch.item.file.MultiResourceItemReader">
		<property name="resources" value="file:csv/inputs/domain-*.csv" />
		<property name="delegate" ref="flatFileItemReader" />
	</bean>

	<bean id="flatFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names" value="id, domain" />
					</bean>
				</property>
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="domain" />
					</bean>
				</property>
			</bean>
		</property>

	</bean>

	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" >
		<property name="resource" value="file:csv/outputs/domain.all.csv" />
		<property name="appendAllowed" value="true" />
		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
						<property name="names" value="id, domain" />
					</bean>
				</property>
			</bean>
		</property>
	</bean>

</beans>